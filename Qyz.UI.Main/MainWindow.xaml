<Window x:Class="Qyz.UI.Main.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
       xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
     xmlns:converter="clr-namespace:Qyz.FrameWork.Utility;assembly=Qyz.FrameWork.Utility"
        Width="800" Height="600" ResizeMode="CanMinimize" MinWidth="800" x:Name="FirstWindow" MinHeight="600"
        WindowStartupLocation="CenterScreen" WindowState="Maximized" Background="#00000000" WindowStyle="None" Foreground="#00000000" BorderBrush="#00000000" SizeChanged="MainWindow_SizeChanged">
    <Window.Resources>
        <Style x:Key="closeBtnStyle" TargetType="Button">
            <Setter Property="Margin" Value="2,0,2,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Opacity" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Margin="-5.167,0,0,-5" Tag="{TemplateBinding Tag}"  MouseLeftButtonDown="closebtn_MouseLeftButtonDown"  >
                            <!--<i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding CloseMdiControlCommand,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"></i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>-->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Ellipse Width="0" Height="0" Fill="#FF5D554F" Opacity=".1" StrokeThickness="2"  Stroke="#FFC27400" HorizontalAlignment="Right" Margin="0,0,-0.5,0" VerticalAlignment="Top"/>
                            <Ellipse x:Name="borderBtn" Width="11.001" Height="11" StrokeThickness="0" Fill="{TemplateBinding Background}"  Stroke="#FFC27400" HorizontalAlignment="Right" Margin="0,1.085,2.568,0" VerticalAlignment="Top"/>

                            <!--按钮内容-->
                            <Grid HorizontalAlignment="Stretch" Width="Auto" Height="Auto" Margin="0" VerticalAlignment="Stretch">
                                <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-0.9,-0.637,0,0" >
                                    <Line StrokeThickness="1" x:Name="l1" Stroke="{TemplateBinding BorderBrush}" X1="0" Y1="0" X2="7" Y2="7" Canvas.Left="4.25" Canvas.Top="3.75" Width="7.062" Height="7"/>
                                    <Line StrokeThickness="1" x:Name="l2" Stroke="{TemplateBinding BorderBrush}" X1="0" Y1="7" X2="7" Y2="0" Canvas.Left="4.25" Canvas.Top="3.75" Height="7" Width="7.062"/>
                                </Canvas>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"  Value="True">
                                <Setter Property="Opacity" Value="1" />
                                <Setter Property="Fill" TargetName="borderBtn" Value="#FFED5A5A"/>
                                <Setter Property="Stroke" TargetName="l1" Value="White"/>
                                <Setter Property="Stroke" TargetName="l2" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <converter:ImageConverter x:Key="imageconverter"></converter:ImageConverter>
    </Window.Resources> 
    <Border x:Name="border" BorderBrush="#FF414752" BorderThickness="6,6,2,2" RenderTransformOrigin="0.5,0.5">
        <Border.RenderTransform>
            <TransformGroup>
                <ScaleTransform/>
                <SkewTransform/>
                <RotateTransform/>
                <TranslateTransform/>
            </TransformGroup>
        </Border.RenderTransform>

        <Grid x:Name="LayoutRoot" Margin="0" Background="#FFC9CFDC">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="65"/>
                <ColumnDefinition Width="180"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>
            <!--左侧主菜单栏-->
            <Image Grid.RowSpan="3" Style="{DynamicResource leftImage}" Stretch="Fill" Margin="0,0,-6.5,0"/>
            <ListView BorderThickness="0" SelectedItem="{Binding SelectMenu,Mode=TwoWay}"  ItemsSource="{Binding MenuList,Mode=TwoWay}" Grid.Row="1" Grid.RowSpan="2" Background="Transparent" >
                <ListView.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#FF414752"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF414752"/>
                </ListView.Resources>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top">
                        </StackPanel>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate> 
                    <DataTemplate>
                        <Image Height="40"  Source="{Binding ImagePath,Converter={StaticResource imageconverter}}" Stretch="Fill" Width="40"  ToolTip="{Binding Name}"/>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
           
          
            <!--标题栏-->
            <Border x:Name="TitleBorder" BorderBrush="Black" BorderThickness="0" Background="#00000000" Grid.ColumnSpan="4" MouseLeftButtonDown="TitleBorder_MouseLeftButtonDown">
                <Grid>
                    <Image Style="{DynamicResource topImage}" Stretch="Fill" Margin="0,0,-1,-6" OpacityMask="#FF1F283A"/>
                    <Button  x:Name="btnSkin" Content="Button" HorizontalAlignment="Right" Height="20" Margin="0,0,90,0" Style="{DynamicResource WinSkinButtonStyle}" VerticalAlignment="Top" Width="25"/>
                    <Button Click="btnMin_Click" x:Name="btnMin" Content="Button" HorizontalAlignment="Right" Height="20" Margin="0,0,65,0" Style="{DynamicResource WinMinButtonStyle}" VerticalAlignment="Top" Width="25" />
                    <Button Click="btnMax_Click" x:Name="btnMax" Height="20" Margin="0,0,40,0" Style="{DynamicResource WinMaxButtonStyle}" VerticalAlignment="Top" HorizontalAlignment="Right" Width="25" >
                    <Rectangle Fill="#FFF4F4F5" Height="8.875" Stroke="Black" Width="12.687"/>
                    </Button>
                    <Button Click="btnClose_Click" x:Name="btnClose" Content="Button" HorizontalAlignment="Right" Height="20" Style="{DynamicResource WinCloseButtonStyle}" VerticalAlignment="Top" Width="40" />
                    <Button Content="Button" HorizontalAlignment="Right" Height="20" Margin="0,0,115,0" Style="{DynamicResource HelpButtonStyle}" VerticalAlignment="Top" Width="25"/>
                    <Button Content="Button" HorizontalAlignment="Right" Height="20" Margin="0,0,140,0" Style="{DynamicResource LogButtonStyle}" VerticalAlignment="Top" Width="25"  />
                    
                </Grid>
            </Border>


            <!--二级菜单栏-->
            <ScrollViewer VerticalScrollBarVisibility="Auto"    FocusVisualStyle="{x:Null}" Name="SV"  Background="#FFEDF2F8" Grid.Column="1" Grid.Row="1">
               
                <ListView Name="listControl"   FocusVisualStyle="{x:Null}" ItemsSource="{Binding ModuleList,Mode=TwoWay}">
                    
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top">
                            </StackPanel>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <!--<ListView.ItemTemplate>
                        <DataTemplate>
                            <Button Content="{Binding Name}"    Command="{Binding DataContext.OpenModuleCommand,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}" />
                        </DataTemplate>
                    </ListView.ItemTemplate>-->
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border Name="BD_Collector" CornerRadius="5" Background="DarkSeaGreen" Width="auto" Height="30" Margin="5">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.OpenModuleCommand,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}"></i:InvokeCommandAction>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <Label Content="{Binding Name}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontSize="13" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="BD_Collector" Property="Background" Value="YellowGreen" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="BD_Collector" Property="Background" Value="DarkGreen" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </ScrollViewer>
            <Button Content="btnLeft" x:Name="btnLeft" Grid.Column="2" Grid.Row="1" FocusVisualStyle="{x:Null}" Style="{DynamicResource ButtonStyle1}" VerticalAlignment="Center" Height="311.052" Cursor="Hand" Click="btnLeft_Click"/>

            <!--mdi主界面-->
            <TabControl ItemsSource="{Binding TabItemsList}"  SelectedIndex="{Binding SelectMdiIndex,Mode=TwoWay}" x:Name="MainControl" Grid.Column="3" Background="#FFEDF2F8" BorderBrush="#FF2B3D4E" BorderThickness="0" Grid.Row="1" Margin="0,5,0,0">
                <TabControl.Resources>
                    <Style  TargetType="TabItem">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Padding" Value="12,2,12,2"/>
                        <Setter Property="Opacity" Value=".6"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="BorderBrush" Value="#FF5C5C5C"/>
                        <Setter Property="Foreground" Value="{DynamicResource  SystemColors.ControlTextBrushKey}"/>
                        <Setter Property="Background" Value="{DynamicResource  SystemColors.ActiveCaptionBrushKey}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="Content" Value="{Binding ContentControl}"></Setter>
                        <Setter Property="IsSelected" Value="{Binding IsSelected}"></Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Border x:Name="ClassicBorder"  BorderThickness="1" SnapsToDevicePixels="true" CornerRadius="3,3,0,0" Background="#FF1F2839" BorderBrush="#FF1F2839" >
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="SelectionStates">
                                                <VisualState x:Name="Unselected">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ClassicBorder">
                                                            <EasingColorKeyFrame KeyTime="0" Value="#FFCACACA"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="ClassicBorder">
                                                            <EasingThicknessKeyFrame KeyTime="0" Value="1,1,1,0"/>
                                                        </ThicknessAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="ClassicBorder">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Selected"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid>
                                            <Button SnapsToDevicePixels="True"  CommandParameter="{Binding}" Name="closebtn" Tag="{Binding Name}"   Visibility="Hidden" Style="{DynamicResource closeBtnStyle}" Margin="0,5.038,-2.42,7.972" HorizontalAlignment="Right" Width="9.75" Height="Auto" VerticalAlignment="Stretch"   RenderTransformOrigin="0.5,0.5">
                                                <Button.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform/>
                                                        <SkewTransform/>
                                                        <RotateTransform/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Button.RenderTransform>
                                            </Button>
                                            <ContentPresenter Content="{Binding Name}"   HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Opacity" Value="1"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="Visibility" TargetName="closebtn" Value="Visible"/>
                                            <Setter Property="Margin" Value="-2"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Visibility" TargetName="closebtn" Value="Visible"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="TabStripPlacement" Value="Top"/>
                                            </MultiTrigger.Conditions>

                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                                            </MultiTrigger.Conditions>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="TabStripPlacement" Value="Left"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Padding" Value="11,2,14,2"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="TabStripPlacement" Value="Right"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Padding" Value="14,2,11,2"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                </TabControl.Resources>
            </TabControl>

            <!--状态栏-->
            <Grid Grid.ColumnSpan="3" Grid.Row="2" Background="#FFEDF2F8" Grid.Column="1">
                <Grid.Resources>
                    <Style TargetType="Label">
                        <Setter Property="VerticalAlignment" Value="Center"></Setter>
                        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                        <Setter Property="Foreground" Value="Black"></Setter>
                        <Setter Property="Margin" Value="10,0,0,0"></Setter>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="700"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal" > 
                    <TextBlock  Foreground="Black"   Name="txtUserName" Text="{Binding UserName}"></TextBlock>  
                </StackPanel>
                <Border  Grid.Column="1" Name="errorpanel"  ClipToBounds="True">
                    <TextBlock Name="lblWaringText" HorizontalAlignment="Right" VerticalAlignment="Center"    Foreground="Red"       RenderTransformOrigin="0.5,0.5">
                        <TextBlock.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                   
                </Border>
                <Rectangle Height="3" Margin="0,-3.063,0,0" Grid.ColumnSpan="2" Stroke="{x:Null}" VerticalAlignment="Top">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.931,-0.023" MappingMode="RelativeToBoundingBox" StartPoint="0.931,1">
                            <GradientStop Color="#995C5C5C"/>
                            <GradientStop Color="#99D6D6D6" Offset="0.996"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
            </Grid>

            <!--右边框和拖动-->
            <Rectangle Grid.Column="3" HorizontalAlignment="Right" Margin="0,0.626,0,0" Grid.Row="1" Width="2" Opacity="0.5" Grid.RowSpan="2">
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="0.988,0" StartPoint="0.008,0">
                        <GradientStop Color="#FFB5C0CC" Offset="0"/>
                        <GradientStop Color="#FF2C2E31" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Thumb x:Name="ThumbSizeChange" HorizontalAlignment="Right" Height="15" Grid.Row="2" Style="{DynamicResource ThumbStyle1}" VerticalAlignment="Bottom" Width="15" Grid.Column="3" Cursor="SizeNWSE" DragDelta="ThumbSizeChange_DragDelta"/>
        </Grid>
    </Border>
</Window>
