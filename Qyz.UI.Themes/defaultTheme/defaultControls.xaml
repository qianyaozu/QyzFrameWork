<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:y="clr-namespace:System.Windows;assembly=PresentationFramework" 
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                     xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="TitleTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Margin" Value="10 5 0 0"></Setter>
    </Style>
    <Style x:Key="DescribeTextBlockStyle" TargetType="TextBlock"> 
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontSize" Value="14"></Setter> 
        <Setter Property="Margin" Value="0 10 0 0"></Setter>
    </Style>


    <Style x:Key="CloseButtonStyle" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0,5,5,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"  CornerRadius="2"  Background="{TemplateBinding Background}"  	BorderThickness="1"  BorderBrush="{TemplateBinding BorderBrush}"  Width="16" Height="16"  	SnapsToDevicePixels="True">
                        <Grid Width="8" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path x:Name="path1" Stroke="#ADADAD" Data="M0,0 L8,8" StrokeThickness="2" />
                            <Path x:Name="path2" Stroke="#ADADAD" Data="M8,0 L0,8" StrokeThickness="2" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#ADADAD"/>
                            <Setter Property="Background" Value="WhiteSmoke"/>
                            <Setter Property="Stroke" TargetName="path1" Value="DarkRed"/>
                            <Setter Property="Stroke" TargetName="path2" Value="DarkRed"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#FFADADAD" Offset="0"/>
                                        <GradientStop Color="White" Offset="0.5"/>
                                        <GradientStop Color="White" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabItemStyle1" TargetType="TabItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Padding" Value="12,2,12,2"/>
        <Setter Property="Opacity" Value=".6"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderBrush" Value="#FF5C5C5C"/>
        <Setter Property="Foreground" Value="{DynamicResource  SystemColors.ControlTextBrushKey}"/>
        <Setter Property="Background" Value="{DynamicResource  SystemColors.ActiveCaptionBrushKey}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="ClassicBorder"  BorderThickness="1" SnapsToDevicePixels="true" CornerRadius="3,3,0,0" Background="#FF1F2839" BorderBrush="#FF1F2839" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ClassicBorder">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFCACACA"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="ClassicBorder">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="1,1,1,0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="ClassicBorder">
                                            <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Button SnapsToDevicePixels="True" Name="closebtn" Tag="{TemplateBinding Header}"   Visibility="Hidden" Style="{StaticResource closeBtnStyle}" Margin="0,5.038,-2.42,7.972" HorizontalAlignment="Right" Width="9.75" Height="Auto" VerticalAlignment="Stretch"   RenderTransformOrigin="0.5,0.5">
                                <Button.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Button.RenderTransform>
                            </Button>
                            <ContentPresenter ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Opacity" Value="1"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Visibility" TargetName="closebtn" Value="Visible"/>
                            <Setter Property="Margin" Value="-2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Visibility" TargetName="closebtn" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>

                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Padding" Value="11,2,14,2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Padding" Value="14,2,11,2"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
        <Setter Property="Height" Value="50"/>
        <!--<Setter Property="FocusVisualStyle" Value="{x:Null}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid" Background="#00000000" Tag="{Binding}"  >
                        <Themes:ClassicBorderDecorator x:Name="border" BorderBrush="#00000000" BorderThickness="1" Opacity="0"/>
                        <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="grid" Value="#FF414752"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="ThumbStyle1" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid ClipToBounds="True">
                        <Path Data="M12.833316,9.1606777 L10.333544,11.916227" HorizontalAlignment="Right" Height="4.692" Stretch="Fill" Stroke="#FF414752" VerticalAlignment="Bottom" Width="4.375" Margin="0,0,-0.948,-0.813"/>
                        <Path Data="M21.416902,9.3746775 L15.786964,16.041357" HorizontalAlignment="Right" Margin="0,7.417,-0.948,-0.813" Stretch="Fill" Stroke="#FF414752" Width="8.031"/>
                        <Path Data="M15.500136,3.2913692 L5.7508186,13.790999" Margin="4.417,3.477,-0.948,-0.813" Stretch="Fill" Stroke="#FF414752"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WinMaxButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <y:VisualStateManager.VisualStateGroups>
                            <y:VisualStateGroup x:Name="CommonStates">
                                <y:VisualState x:Name="Normal"/>
                                <y:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
                                            <EasingColorKeyFrame KeyTime="0" Value="#B258718D"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </y:VisualState>
                                <y:VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
                                            <EasingColorKeyFrame KeyTime="0" Value="#7F58718D"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </y:VisualState>
                                <y:VisualState x:Name="Disabled"/>
                            </y:VisualStateGroup>
                        </y:VisualStateManager.VisualStateGroups>
                        <Border x:Name="bd" BorderThickness="1,1,0,1" Background="#00000000">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF2F2E2E" Offset="0.97"/>
                                    <GradientStop Color="#FF727272" Offset="0.991"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Grid>
                                <Rectangle x:Name="R1" Fill="{x:Null}" Margin="6.167,8.332,9.667,3.335" Stroke="White" StrokeThickness="1"/>
                                <Path x:Name="P1" Data="M12,6.6666667 L12,2.3329998 19,2.3329998 19,8.4995255 14.833333,8.4995255" Fill="{x:Null}" HorizontalAlignment="Stretch" Margin="10.25,4.415,5.75,6.418" Stretch="Fill" Stroke="White" StrokeThickness="1" Width="Auto"/>
                                <Rectangle x:Name="R2" Fill="{x:Null}" Margin="5.918,4.415,5.999,3.335" Stroke="White" StrokeThickness="1"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding WindowState, ElementName=FirstWindow}" Value="Maximized">
                            <Setter Property="Visibility" TargetName="R1" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="P1" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="R2" Value="Hidden"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WindowState, ElementName=FirstWindow}" Value="Normal">
                            <Setter Property="Visibility" TargetName="R1" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="P1" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="R2" Value="Visible"/>
                        </DataTrigger>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WinMinButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <y:VisualStateManager.VisualStateGroups>
                            <y:VisualStateGroup x:Name="CommonStates">
                                <y:VisualState x:Name="Normal"/>
                                <y:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
                                            <EasingColorKeyFrame KeyTime="0" Value="#B258718D"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </y:VisualState>
                                <y:VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
                                            <EasingColorKeyFrame KeyTime="0" Value="#7F58718D"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </y:VisualState>
                                <y:VisualState x:Name="Disabled"/>
                            </y:VisualStateGroup>
                        </y:VisualStateManager.VisualStateGroups>
                        <Border x:Name="bd" BorderThickness="1,1,0,1" Background="#00000000">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF2F2E2E" Offset="0.97"/>
                                    <GradientStop Color="#FF727272" Offset="0.991"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Grid>
                                <Path Data="M4.375,12.875 L19.625,12.875" Fill="{x:Null}" Height="1" Margin="4.5,0,4.5,3.5" Stretch="Fill" Stroke="White" StrokeThickness="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WinSkinButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <y:VisualStateManager.VisualStateGroups>
                            <y:VisualStateGroup x:Name="CommonStates">
                                <y:VisualState x:Name="Normal"/>
                                <y:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
                                            <EasingColorKeyFrame KeyTime="0" Value="#B258718D"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </y:VisualState>
                                <y:VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
                                            <EasingColorKeyFrame KeyTime="0" Value="#7F58718D"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </y:VisualState>
                                <y:VisualState x:Name="Disabled"/>
                            </y:VisualStateGroup>
                        </y:VisualStateManager.VisualStateGroups>
                        <Border x:Name="bd" BorderThickness="1,1,0,1" CornerRadius="0" Background="#00000000">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF2F2E2E" Offset="0.97"/>
                                    <GradientStop Color="#FF727272" Offset="0.991"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Grid>
                                <Image Margin="5.333,2.5,5.333,2.166" Source="image/yifu.png" Stretch="Fill"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <y:VisualStateManager.VisualStateGroups>
                            <y:VisualStateGroup x:Name="CommonStates">
                                <y:VisualStateGroup.Transitions>
                                    <y:VisualTransition From="Normal" GeneratedDuration="0:0:0.3" To="MouseOver">
                                        <!--<ei:ExtendedVisualStateManager.TransitionEffect>
                                            <ee:RippleTransitionEffect/>
                                        </ei:ExtendedVisualStateManager.TransitionEffect>-->
                                    </y:VisualTransition>
                                    <y:VisualTransition From="MouseOver" GeneratedDuration="0:0:1.5" To="Normal">
                                        <!--<ei:ExtendedVisualStateManager.TransitionEffect>
                                            <ee:FadeTransitionEffect/>
                                        </ei:ExtendedVisualStateManager.TransitionEffect>-->
                                    </y:VisualTransition>
                                </y:VisualStateGroup.Transitions>
                                <y:VisualState x:Name="Normal"/>
                                <y:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#B27C7777"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF626262"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#195E5B5B"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </y:VisualState>
                                <y:VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#B27C7777"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#195E5B5B"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF626262"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </y:VisualState>
                                <y:VisualState x:Name="Disabled"/>
                            </y:VisualStateGroup>
                        </y:VisualStateManager.VisualStateGroups>
                        <!--<y:VisualStateManager.CustomVisualStateManager>
                            
                            <ei:ExtendedVisualStateManager/>
                        </y:VisualStateManager.CustomVisualStateManager>-->
                        <Border x:Name="border" BorderBrush="#00000000" BorderThickness="1">
                            <Border.Background>
                                <RadialGradientBrush GradientOrigin="-0.116,0.5" RadiusY="0.548">
                                    <GradientStop Color="#00626262" Offset="0"/>
                                    <GradientStop Offset="1"/>
                                    <GradientStop Color="#007C7777" Offset="0.43"/>
                                    <GradientStop Color="#005E5B5B" Offset="0.917"/>
                                </RadialGradientBrush>
                            </Border.Background>
                            <Path Data="M7.3333333,81.219 L0.69065201,86.365721 7.3336668,91.552671 z" Margin="2.125,0,1.5,0" Stretch="Fill" Stroke="{x:Null}" VerticalAlignment="Center" Height="10.702" Fill="White"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Storyboard x:Key="WarningInfoChange" AutoReverse="False">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="lblWaringText">
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="lblWaringText">
            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-0.001"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="lblWaringText">
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-12.516"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="WarningInfoChange2">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="lblWaringText">
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="lblWaringText">
            <EasingDoubleKeyFrame KeyTime="0" Value="12.5"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.032"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Style x:Key="HelpButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="bd" BorderThickness="1,1,0,1" Background="#00000000" CornerRadius="0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF2F2E2E" Offset="0.97"/>
                                    <GradientStop Color="#FF727272" Offset="0.991"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Grid>
                                <Image Margin="4.568,2.25,5.318,2.25" Source="image/question.png" Stretch="Fill"/>
                                <Popup IsOpen="{TemplateBinding IsMouseOver}">
                                    <Grid Background="White" Height="39.995" Width="76">
                                        <Button x:Name="btnHelp" Content="帮助" Height="20" Style="{DynamicResource HelpandLogButtonStyle}" VerticalAlignment="Top" Width="Auto" Margin="0" Background="White"/>
                                        <Button x:Name="btnAbout" Content="关于" Height="20" Style="{DynamicResource HelpandLogButtonStyle}" VerticalAlignment="Top" Margin="0,20,0,0" Background="White"/>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="bd" Value="#B258718D"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="bd" Value="#7F58718D"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HelpandLogButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{x:Null}">
                        <Border  Name="bd" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="0"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="bd" Value="#FFFFB053"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="bd" Value="#FFFFB053"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="#99FFFFFF"/>
        <Setter Property="BorderBrush" Value="#FF20293B"/>
    </Style>
    <Style x:Key="LogButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="bd" BorderThickness="1,1,0,1" Background="#00000000" CornerRadius="0,0,0,3">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF2F2E2E" Offset="0.97"/>
                                    <GradientStop Color="#FF727272" Offset="0.991"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Grid>
                                <Image HorizontalAlignment="Stretch" Margin="6.082,3.916,6.332,3.001" Source="image/login.png" Stretch="Fill" Width="Auto"/>
                                <Popup IsOpen="{TemplateBinding IsMouseOver}">
                                    <StackPanel Background="White" Height="Auto" Width="76">
                                        <Button  x:Name="btnLogin"  Content="登录" Height="20" Style="{DynamicResource HelpandLogButtonStyle}" VerticalAlignment="Top" Width="Auto" Margin="0" Visibility="{Binding LoginVisibility,UpdateSourceTrigger=PropertyChanged}" Background="White" />
                                        <Button  x:Name="btnLogout" Content="注销" Height="20" Style="{DynamicResource HelpandLogButtonStyle}" VerticalAlignment="Top"   Margin="0" Visibility="{Binding LoginOutVisibility,UpdateSourceTrigger=PropertyChanged}" Background="White"/>
                                        <Button   x:Name="btnQuit" Content="退出" Height="20" Style="{DynamicResource HelpandLogButtonStyle}" VerticalAlignment="Top"   Margin="0" Background="White"/>
                                    </StackPanel>
                                </Popup>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="bd" Value="#B258718D"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="bd" Value="#7F58718D"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WinCloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
                                            <EasingColorKeyFrame KeyTime="0" Value="#B2F14E01"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
                                            <EasingColorKeyFrame KeyTime="0" Value="#7FF14E01"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="bd" BorderThickness="1" CornerRadius="0,0,3,0" Background="#00000000">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF2F2E2E" Offset="0.97"/>
                                    <GradientStop Color="#FF727272" Offset="0.991"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Grid>
                                <Path Data="M12.499941,3.8750219 L24.666332,13.582839" Fill="{x:Null}" Margin="13.589,5.167,14.422,4.709" Stretch="Fill" Stroke="White" StrokeThickness="1" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="6.358"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Path Data="M24.625414,3.7921788 L12.500751,13.541166" Fill="{x:Null}" Margin="13.589,5.105,14.453,4.74" Stretch="Fill" Stroke="White" StrokeThickness="1" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-7.562"/>
                                            <TranslateTransform X="-0.001"/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="PasswordBox">
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" Color="Black" Direction="0" Opacity="0.6" RenderingBias="Performance" ShadowDepth="0"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="TextBox">
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" Color="Black" Direction="0" Opacity="0.6" RenderingBias="Performance" ShadowDepth="0"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>